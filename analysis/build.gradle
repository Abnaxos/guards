/*
 * Copyright 2015 Raffael Herzog
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */



apply plugin:guards.PreparedShadow

def antlr4Version = '4.5'
def antlr4Src = file('src/main/antlr4/Expression.g4')
def antlr4Package = 'ch.raffael.guards.analysis.expr'
def antlr4Out = file("$buildDir/antlr4/generated")
def antlr4Final = file("$buildDir/antlr4/parser")

configurations {
    antlr4Tool
}

dependencies {
    shadowed group:'org.antlr', name:'antlr4-runtime', version:antlr4Version
    antlr4Tool group:'org.antlr', name:'antlr4', version:antlr4Version

    compile project(':runtime')
}

tasks.create('antlr4') {

    inputs.file antlr4Src
    outputs.dir antlr4Final

    doFirst {
        mkdir antlr4Out
        javaexec {
            classpath configurations.antlr4Tool
            main 'org.antlr.v4.Tool'
            args '-o', antlr4Out, '-listener', '-package', antlr4Package, antlr4Src
        }
        mkdir antlr4Final
        copy {
            from antlr4Out
            include '**/*.java'
            into file("$antlr4Final/${antlr4Package.replace('.', File.separator)}")
            filter { String line ->
                return line.replaceAll(~'org\\.antlr\\.v4\\.runtime', 'ch.raffael.guards.analysis.expr.antlr4rt')
            }
        }
    }
}

sourceSets.main.java.srcDir antlr4Final

preparedShadowJar {
    relocate 'org.antlr.v4.runtime', 'ch.raffael.guards.analysis.expr.antlr4rt'
}


develEnv.dependsOn preparedShadowJar, preparedShadowSourceJar, antlr4
