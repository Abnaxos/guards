/*
 * Copyright 2015 Raffael Herzog
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */



version = null

String[] agentArgs = [
        '+dump',
        'nopMethod=dedicated_method',
        '-nopMode',
        'multiGuardMethod=mh_guard',
        '-mutableCallSites',
        ]

dependencies {
    compile project(':agent'), project(':runtime')
    runtime findToolsJar()

    compile group:'com.google.caliper', name:'caliper', version:'1.0-beta-1'
}

tasks.jar.enabled = false
tasks.javadoc.enabled = false
tasks.javadocJar.enabled = false

tasks.compileJava.dependsOn parent.jar

task('benchmark') {
    dependsOn classes

    doFirst {
        println '~' * 80
        def cp = sourceSets.main.runtimeClasspath
        println "Agent args: $agentArgs"
        //println "Classpath: $cp.files"
        println '~' * 80
        javaexec {
            main = 'verysimple.Test'
            jvmArgs = [ "-javaagent:${parent.jar.archivePath}=${agentArgs.join(',')}" ]
            classpath = cp
//            args = [ "${agentArgs.join(',')}" ]
        }
        println '~' * 80
    }
}

uploadArchives.enabled = false

